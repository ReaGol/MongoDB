NoSQL -> Database -> Collection(list of entries) -> Document (looks like JSON)

Actions in DB:
-----------------------------------------------------------------------
CRUD in MongoDB:
Create = insert()
Read = find() **is actually like filter
Update = update() --> {$set:} will replace value of field
Delete = delete()
------------------------------------------------------------------------
db.users.insertOne()
db.users.insertMany()
------------------------------------------------------------------------
db.users.find({ name: 'reut'}) --> find all users named reut
db.movies.find( { "awards.wins": { $gt: 100 } } ); //greater than
db.users.find({ name: "reut"}, {name: 1, age: 1}) --> will return only the name and age fields
db.users.find({ name: "reut"}, {name: 1, age: 1, _id: 0}) --> will return name and age without ID
db.users.find().forEach().pretty() --> iterate over data and make it easier to read
db.users.find().sort({ name: 1 }).limit(2) --> sort by names alphabetically ascending, only show two names
db.users.find().sort({ age: -1, name: 1 }).limit(2) --> sort by name ascending and age descending
**find() -> only reference
making changes is only using findOne()

------------------------------------------------------------------------
db.users.update() ---- {$set:}  //atomic operators=$set
db.users.updateOne({$push}) --> add
db.users.updateOne({$pull}) --> remove
db.users.deleteOne({})

//complex queries//
db.users.find({age: {$someAction}})
$eq --> equal to
$ne --> not equal
$gt --> greater than
$gte --> greater than or equal to
$lte --> less than or equal to

db.users.find({name: {$someAction}})
db.users.find({name: {$in: ['bashir', 'reut'] }})
$nin --> not in
db.users.find({age: {$someAction}})
$exists: false/true


$not --> before some condition we want to exclude
$and
$or --> match either age or name:
db.users.find({ $or: [{ age: {$lte: 20}}, {name: 'bashir}] })
$expr --> compare different properties in an object (e.g. in bank account check balance: is debt bigger than credit)


db.users.countDocuments({ age: { $lte: 40 }}) --> returns the number of docs that fit the condition






    
